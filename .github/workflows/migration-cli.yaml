name: Migration Tool E2E

on:
  pull_request:
    paths:
      - 'cmd/cli/**'
      - 'cmd/migration/**'
env:
  K3D_VERSION: v5.4.6
  IMAGE_REGISTRY: "ghcr.io"
  IMAGE_REPOSITORY: "kubeshop/botkube-migration"
  IMAGE_TAG: ${{ github.event.pull_request.head.sha }}

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          install-only: true
          version: latest

      - name: Run GoReleaser
        run: make release-botkube-cli

      - name: Push Config Exporter Image
        run: docker push ${IMAGE_REGISTRY}/${IMAGE_REPOSITORY}:${IMAGE_TAG}

      - name: Add botkube alias
        run: |
          echo BOTKUBE_BIN="$PWD/cli-dist/botkube-cli_linux_amd64_v1/botkube" >> $GITHUB_ENV

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Download k3d
        run: "wget -q -O - https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | TAG=${K3D_VERSION} bash"

      - name: Create k3d cluster
        run: "k3d cluster create migration-test-cluster --wait --timeout=5m"

      - name: Run e2e tests for botkube client
        env:
          DISCORD_BOT_ID: ${{ secrets.DISCORD_BOT_ID }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_TESTER_APP_TOKEN }}
          DISCORD_GUILD_ID: ${{ secrets.DISCORD_GUILD_ID }}
          DISCORD_TESTER_APP_TOKEN: ${{ secrets.DISCORD_TESTER_APP_TOKEN }}
          BOTKUBE_CLOUD_DEV_GQL_ENDPOINT: ${{ secrets.BOTKUBE_CLOUD_DEV_GQL_ENDPOINT }}
          BOTKUBE_CLOUD_DEV_REFRESH_TOKEN: ${{ secrets.BOTKUBE_CLOUD_DEV_REFRESH_TOKEN }}
          BOTKUBE_CLOUD_DEV_AUTH0_CLIENT_ID: ${{ secrets.BOTKUBE_CLOUD_DEV_AUTH0_CLIENT_ID }}
        run: |
          KUBECONFIG=$(k3d kubeconfig write migration-test-cluster) \
            make test-migration-tool
